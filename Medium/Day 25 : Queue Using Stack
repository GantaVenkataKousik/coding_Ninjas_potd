import java.util.*;
public class Solution{

    static class Queue {
        // Define the data members(if any) here.
        Stack<Integer> s1;
        Stack<Integer> s2;
        Queue() {
           s1 = new Stack<>();
           s2 = new Stack<>();
        }

        void enQueue(int val) {
            // Implement the enqueue() function.
            s1.add(val);
        }

        int deQueue() {
            if(s1.isEmpty())return -1;
            while(!s1.isEmpty()){
                s2.add(s1.pop());
            }
            int ele = s2.pop();
            while(!s2.isEmpty()){
                s1.add(s2.pop());
            }
            return ele;
        }

        int peek() {
            // Implement the peek() .
            return (isEmpty())?-1:s1.peek();
}

        boolean isEmpty() {
            // Implement the isEmpty() function here.
            return s1.isEmpty();
        }
    }
}
